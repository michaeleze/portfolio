{"version":3,"sources":["components/header/index.tsx","components/summary-text/index.tsx","pages/about/index.tsx","pages/contact/index.tsx","components/header-text/index.tsx","pages/home/index.tsx","routes.tsx","pages/work/index.tsx","components/navbar/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","container","minHeight","position","columnOne","display","alignItems","justifyContent","breakpoints","down","order","columnTwo","Header","props","columnOneBackground","columnTwoBackground","columnOneContent","columnTwoContent","classes","Grid","className","item","children","md","xs","style","background","summary","fontWeight","lineHeight","SummaryText","Typography","component","dangerouslySetInnerHTML","__html","variant","bio","fontSize","padding","margin","height","letterSpacing","width","email","backgroundColor","borderRadius","color","cursor","textDecoration","emailContainer","linkHome","bottom","name","AboutText","to","href","About","Contact","target","rel","headerText","fontFamily","left","right","top","transform","textTransform","textAlign","WebkitTextFillColor","WebkitTextStrokeWidth","WebkitTextStrokeColor","zIndex","HeaderText","text","textStrokeColor","Home","routes","path","Component","NavBar","state","open","hamburger","navbarWhite","openNav","event","preventDefault","setState","window","addEventListener","scrollY","this","shift","map","activeClassName","exact","key","onClick","App","match","CSSTransition","in","timeout","classNames","unmountOnExit","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1416cccc.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface IHeader {\n    columnOneBackground?: string;\n    columnTwoBackground?: string;\n    columnOneContent?: string | ReactElement;\n    columnTwoContent?: string | ReactElement;\n}\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        minHeight: '100vh',\n        position: 'relative',\n    },\n    columnOne: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            order: 2,\n        },\n    },\n    columnTwo: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            order: 1,\n        },\n    }\n}));\n\nconst Header: React.FC<IHeader> = (props) => {\n    const {\n        columnOneBackground = '#ff006d',\n        columnTwoBackground = '#282c34',\n        columnOneContent,\n        columnTwoContent,\n    } = props;\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.container}>\n            <Grid\n                item\n                className={classes.columnOne}\n                children={columnOneContent}\n                md={6}\n                xs={12}\n                style={{ background: columnOneBackground }}\n            />\n            <Grid\n                item\n                className={classes.columnTwo}\n                children={columnTwoContent}\n                md={6}\n                xs={12}\n                style={{ background: columnTwoBackground }}\n            />\n        </Grid>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface ISummaryText {\n    summary?: any;\n};\n\nconst summarycontent = `<p> I am a software engineer, designer and UX expert skilled in latest Frontend technology (such as React JS, Typescript,\n    GraphQl), with solid experience using a well structured approach to find solutions for complex technical chanllenges</p>\n        <p>I have had great success and achievements building next big technologies and applications over the past 4 years. </p>\n        <p> I don't just build softwares but love to train and mentor young aspiring tech enthusiast who love to code. <br /> Hobbies include programming, dancing, music, cooking and sports(basket ball and football).</p>\n       `;\n\nconst useStyles = makeStyles(theme => ({\n    summary: {\n        fontWeight: 100,\n        lineHeight: 1.5,\n      },\n}));\n\nconst SummaryText: React.FC<ISummaryText> = (props) => {\n    const { summary = summarycontent } = props;\n    const classes = useStyles();\n\n    function createMarkup() {\n        return { __html: summary };\n    }\n\n    return <Typography className={classes.summary} component=\"p\" dangerouslySetInnerHTML={createMarkup()} variant=\"body1\" />;\n};\n\nexport default SummaryText;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/header';\nimport SummaryText from '../../components/summary-text';\n// import LinkedInIcon from '@material-ui/icons/LinkedIn';\n\ninterface IAboutText {\n  classes: Record<\"bio\" | \"container\" | \"email\" | \"emailContainer\" | \"linkHome\" | \"name\" , string>;\n}\n\nconst useStyles = makeStyles(() => ({\n  bio: {\n    fontSize: '4em',\n    padding: 0,\n    margin: 0\n  },\n  container: {\n    fontWeight: 700,\n    height: 'auto',\n    letterSpacing: '0.03em',\n    lineHeight: '1',\n    margin: '0 auto',\n    width: '70%'\n  },\n  email: {\n    backgroundColor: '#ffdd00',\n    borderRadius: '5px',\n    color: 'white',\n    cursor: 'pointer',\n    padding: '8px 15px',\n    textDecoration: 'none',\n  },\n  emailContainer: {\n    padding: '15px 0',\n  },\n  linkHome: {\n    bottom: '15px',\n    color: '#111',\n    fontWeight: 100,\n    lineHeight: 1.5,\n    position: 'relative',\n    textDecoration: 'none',\n  },\n  name: {\n    color: '#ffdd00',\n    fontSize: '1.5em',\n    padding: 0,\n  },\n}));\n\nconst AboutText: React.FC<IAboutText> = ({ classes }) => (\n  <div className={classes.container}>\n    <Typography variant=\"caption\"><Link to='/' className={classes.linkHome}>GO HOME</Link></Typography>\n    <Typography className={classes.name}> Michael C. Eze </Typography>\n    <Typography variant=\"h1\" className={classes.bio}> <b>Bring Your Imaginations to Life</b></Typography>\n    <SummaryText />\n    <Typography className={classes.emailContainer}><a className={classes.email} href=\"mailto:michaeleze3@gmail.com\"> Say Hi</a></Typography>\n    <a href=\"https://linkedin.com/in/michaeleze\">linkedin</a>\n    <a href=\"https://twitter.com/michaelcityboy\">Twitter Logo</a>\n  </div>\n)\n\nconst About: React.FC = () => {\n  const classes = useStyles();\n\n  return <Header columnOneBackground=\"white\" columnOneContent={<AboutText classes={classes} />} />;\n}\n\nexport default About;\n","import React from 'react';\nimport './index.css';\n\nconst Contact: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Contact</h1>\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Home\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface IHeaderText {\n    textStrokeColor?: string;\n    text?: string;\n};\n\nconst useStyles = makeStyles(theme => ({\n    headerText: {\n        display: 'flex',\n        fontSize: '22vw',\n        fontFamily: '\"Open Sans\", sans-serif',\n        justifyContent: 'center',\n        left: '0',\n        lineHeight: '.1vh',\n        margin: 'auto',\n        position: 'absolute',\n        right: '0',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        textTransform: 'uppercase',\n        textAlign: 'center',\n        WebkitTextFillColor: 'transparent',\n        WebkitTextStrokeWidth: '3px',\n        WebkitTextStrokeColor: '#ffdd00',\n        zIndex: 1,\n    }\n}));\n\nconst HeaderText: React.FC<IHeaderText> = (props) => {\n    const { text = \"MICHAEL\", textStrokeColor } = props;\n    const classes = useStyles();\n\n    return (\n        <h1\n            className={classes.headerText}\n            style={{ WebkitTextStrokeColor: textStrokeColor }}\n        >\n            <span>{text}</span>\n            <span>.</span>\n        </h1>\n    );\n};\n\nexport default HeaderText;\n","import React from 'react';\nimport Header from '../../components/header';\nimport HeaderText from '../../components/header-text';\n\nconst Home: React.FC = () => (\n    <section>\n        <Header />\n        <HeaderText />\n    </section>\n)\n\nexport default Home;\n","import { About, Contact, Home, Work } from './pages';\n\nexport interface IRoutes {\n    path: string;\n    name: string;\n    Component: React.FunctionComponent<{}>;\n}\n\nexport const routes: IRoutes[] = [\n    { path: '/', name: 'Home', Component: Home },\n    { path: '/about', name: 'About', Component: About },\n    { path: '/contact', name: 'Contact', Component: Contact },\n    { path: '/work', name: 'Work', Component: Work },\n]","import React from 'react';\nimport './index.css';\n\nconst Work: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Work</h1>\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Home\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default Work;\n","// Component Will Be Refactored to Functional Component\n\nimport React, { Component, SyntheticEvent } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { routes, IRoutes } from '../../routes';\nimport './index.css';\nclass NavBar extends Component {\n    state = {\n        open: false,\n        hamburger: \"&#9776;\",\n        navbarWhite: '',\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', () => {\n            window.scrollY > 0 && this.setState({ navbarWhite: 'white' });\n            window.scrollY === 0 && this.setState({ navbarWhite: '' });\n        })\n\n    }\n\n    openNav = (event: SyntheticEvent) => {\n        event.preventDefault();\n        this.setState({ open: !this.state.open });\n    }\n\n    render() {\n        const { open, navbarWhite } = this.state;\n        routes.shift();\n\n        return (\n            <div className='fm-navbar-menu'>\n                <div className={open ? 'bg-white' : ''}>\n                    <div className={`fm-navbar-body ${navbarWhite}`}>\n                        <div className='logo'>\n                            <div className={open ? 'txt-black' : ''}>\n                                <NavLink className='logoText' to='/'>\n                                    <b> MICHAEL</b>\n                                    <b className='dotText'>.</b>\n                                </NavLink>\n                            </div>\n                            <div className='nav-lg'>\n                                <div className='item'>\n                                    {\n                                        routes.map(({ name, path }: IRoutes) => (\n                                            <NavLink\n                                                activeClassName='is-active'\n                                                exact={true}\n                                                key={name}\n                                                to={path}\n                                            >\n                                                {name}\n                                            </NavLink>\n                                        ))\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className='fm-navbar-nav'>\n                            <div className='bt-menu' onClick={this.openNav}>&#9776;\n                            </div>\n                            {open &&\n                                <>\n                                    <div className='nav'>\n                                        {\n                                            routes.map(({ name, path }: IRoutes) => (\n                                                <NavLink\n                                                    activeClassName='is-active'\n                                                    exact={true}\n                                                    key={name}\n                                                    to={path}\n                                                >\n                                                    {name}\n                                                </NavLink>\n                                            ))\n                                        }\n                                    </div>\n                                    <div className='fm-navbar-social'>\n                                        <ul>\n                                            <li><b>Instagram</b></li>\n                                            <li><b>Facebook</b></li>\n                                            <li><b>Twitter</b></li>\n                                        </ul>\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavBar","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group'\nimport NavBar from './components/navbar';\nimport { routes, IRoutes } from './routes';\nimport './index.css';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      {routes.map(({ path, Component }: IRoutes) => (\n        <Route key={path} exact path={path}>\n          {({ match }) => (\n            <CSSTransition\n              in={match != null}\n              timeout={400}\n              classNames=\"page\"\n              unmountOnExit\n            >\n              <div className=\"page\">\n                <Component />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n      ))}\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}